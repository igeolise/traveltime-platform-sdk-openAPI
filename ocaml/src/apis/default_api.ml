(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let geocoding_reverse_search ~lat ~lng ?within_country () =
    let open Lwt in
    let uri = Request.build_uri "/v4/geocoding/reverse" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    let uri = Request.add_query_param uri "lat" string_of_float lat in
    let uri = Request.add_query_param uri "lng" string_of_float lng in
    let uri = Request.maybe_add_query_param uri "within.country" (fun x -> x) within_country in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_geocoding.of_yojson) resp body

let geocoding_search ~query ?focus_lat ?focus_lng ?within_country () =
    let open Lwt in
    let uri = Request.build_uri "/v4/geocoding/search" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    let uri = Request.add_query_param uri "query" (fun x -> x) query in
    let uri = Request.maybe_add_query_param uri "focus.lat" string_of_float focus_lat in
    let uri = Request.maybe_add_query_param uri "focus.lng" string_of_float focus_lng in
    let uri = Request.maybe_add_query_param uri "within.country" (fun x -> x) within_country in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_geocoding.of_yojson) resp body

let map_info () =
    let open Lwt in
    let uri = Request.build_uri "/v4/map-info" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_map_info.of_yojson) resp body

let routes ~request_routes_t =
    let open Lwt in
    let uri = Request.build_uri "/v4/routes" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    let body = Request.write_as_json_body Request_routes.to_yojson request_routes_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_routes.of_yojson) resp body

let supported_locations ~request_supported_locations_t =
    let open Lwt in
    let uri = Request.build_uri "/v4/supported-locations" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    let body = Request.write_as_json_body Request_supported_locations.to_yojson request_supported_locations_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_supported_locations.of_yojson) resp body

let time_filter ~request_time_filter_t =
    let open Lwt in
    let uri = Request.build_uri "/v4/time-filter" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    let body = Request.write_as_json_body Request_time_filter.to_yojson request_time_filter_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_time_filter.of_yojson) resp body

let time_filter_fast ~request_time_filter_fast_t =
    let open Lwt in
    let uri = Request.build_uri "/v4/time-filter/fast" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    let body = Request.write_as_json_body Request_time_filter_fast.to_yojson request_time_filter_fast_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_time_filter_fast.of_yojson) resp body

let time_filter_postcode_districts ~request_time_filter_postcode_districts_t =
    let open Lwt in
    let uri = Request.build_uri "/v4/time-filter/postcode-districts" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    let body = Request.write_as_json_body Request_time_filter_postcode_districts.to_yojson request_time_filter_postcode_districts_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_time_filter_postcode_districts.of_yojson) resp body

let time_filter_postcode_sectors ~request_time_filter_postcode_sectors_t =
    let open Lwt in
    let uri = Request.build_uri "/v4/time-filter/postcode-sectors" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    let body = Request.write_as_json_body Request_time_filter_postcode_sectors.to_yojson request_time_filter_postcode_sectors_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_time_filter_postcode_sectors.of_yojson) resp body

let time_filter_postcodes ~request_time_filter_postcodes_t =
    let open Lwt in
    let uri = Request.build_uri "/v4/time-filter/postcodes" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    let body = Request.write_as_json_body Request_time_filter_postcodes.to_yojson request_time_filter_postcodes_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_time_filter_postcodes.of_yojson) resp body

let time_map ~request_time_map_t =
    let open Lwt in
    let uri = Request.build_uri "/v4/time-map" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "X-Api-Key" Request.api_key in
    let headers = Cohttp.Header.add headers "X-Application-Id" Request.api_key in
    let body = Request.write_as_json_body Request_time_map.to_yojson request_time_map_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Response_time_map.of_yojson) resp body

