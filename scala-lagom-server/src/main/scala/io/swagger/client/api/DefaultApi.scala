/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.swagger.client.api

import akka.{Done, NotUsed}
import com.lightbend.lagom.scaladsl.api.transport.Method
import com.lightbend.lagom.scaladsl.api.{Service, ServiceCall}
import play.api.libs.json._
import com.lightbend.lagom.scaladsl.api.deser.PathParamSerializer

import io.swagger.client.model.RequestRoutes
import io.swagger.client.model.RequestSupportedLocations
import io.swagger.client.model.RequestTimeFilter
import io.swagger.client.model.RequestTimeFilterFast
import io.swagger.client.model.RequestTimeFilterPostcodeDistricts
import io.swagger.client.model.RequestTimeFilterPostcodeSectors
import io.swagger.client.model.RequestTimeFilterPostcodes
import io.swagger.client.model.RequestTimeMap
import io.swagger.client.model.ResponseError
import io.swagger.client.model.ResponseGeocoding
import io.swagger.client.model.ResponseMapInfo
import io.swagger.client.model.ResponseRoutes
import io.swagger.client.model.ResponseSupportedLocations
import io.swagger.client.model.ResponseTimeFilter
import io.swagger.client.model.ResponseTimeFilterFast
import io.swagger.client.model.ResponseTimeFilterPostcodeDistricts
import io.swagger.client.model.ResponseTimeFilterPostcodeSectors
import io.swagger.client.model.ResponseTimeFilterPostcodes
import io.swagger.client.model.ResponseTimeMap

trait DefaultApi extends Service {


  final override def descriptor = {
    import Service._
    named("DefaultApi").withCalls(
      restCall(Method.GET, "/v4/geocoding/reverse?lat&lng&withinCountry", geocodingReverseSearch _), 
      restCall(Method.GET, "/v4/geocoding/search?query&focusLat&focusLng&withinCountry", geocodingSearch _), 
      restCall(Method.GET, "/v4/map-info", mapInfo _), 
      restCall(Method.POST, "/v4/routes", routes _), 
      restCall(Method.POST, "/v4/supported-locations", supportedLocations _), 
      restCall(Method.POST, "/v4/time-filter", timeFilter _), 
      restCall(Method.POST, "/v4/time-filter/fast", timeFilterFast _), 
      restCall(Method.POST, "/v4/time-filter/postcode-districts", timeFilterPostcodeDistricts _), 
      restCall(Method.POST, "/v4/time-filter/postcode-sectors", timeFilterPostcodeSectors _), 
      restCall(Method.POST, "/v4/time-filter/postcodes", timeFilterPostcodes _), 
      restCall(Method.POST, "/v4/time-map", timeMap _)
    ).withAutoAcl(true)
  }

      
  /**
    * 
    * 
    *  
    * @param lat   
    * @param lng   
    * @param withinCountry  (optional)
    * @return ResponseGeocoding
    */
  def geocodingReverseSearch(lat:Double          ,lng:Double          ,withinCountry:           Option[String] = None): ServiceCall[NotUsed ,ResponseGeocoding]
        
  /**
    * 
    * 
    *  
    * @param query   
    * @param focusLat  (optional) 
    * @param focusLng  (optional) 
    * @param withinCountry  (optional)
    * @return ResponseGeocoding
    */
  def geocodingSearch(query:String          ,focusLat:           Option[Double] = None,focusLng:           Option[Double] = None,withinCountry:           Option[String] = None): ServiceCall[NotUsed ,ResponseGeocoding]
  
  /**
    * 
    * 
    * 
    * @return ResponseMapInfo
    */
  def mapInfo(): ServiceCall[NotUsed ,ResponseMapInfo]
  
  /**
    * 
    * 
    *  
    * @return ResponseRoutes Body Parameter   
    */
  def routes(): ServiceCall[RequestRoutes ,ResponseRoutes]
  
  /**
    * 
    * 
    *  
    * @return ResponseSupportedLocations Body Parameter   
    */
  def supportedLocations(): ServiceCall[RequestSupportedLocations ,ResponseSupportedLocations]
  
  /**
    * 
    * 
    *  
    * @return ResponseTimeFilter Body Parameter   
    */
  def timeFilter(): ServiceCall[RequestTimeFilter ,ResponseTimeFilter]
  
  /**
    * 
    * 
    *  
    * @return ResponseTimeFilterFast Body Parameter   
    */
  def timeFilterFast(): ServiceCall[RequestTimeFilterFast ,ResponseTimeFilterFast]
  
  /**
    * 
    * 
    *  
    * @return ResponseTimeFilterPostcodeDistricts Body Parameter   
    */
  def timeFilterPostcodeDistricts(): ServiceCall[RequestTimeFilterPostcodeDistricts ,ResponseTimeFilterPostcodeDistricts]
  
  /**
    * 
    * 
    *  
    * @return ResponseTimeFilterPostcodeSectors Body Parameter   
    */
  def timeFilterPostcodeSectors(): ServiceCall[RequestTimeFilterPostcodeSectors ,ResponseTimeFilterPostcodeSectors]
  
  /**
    * 
    * 
    *  
    * @return ResponseTimeFilterPostcodes Body Parameter   
    */
  def timeFilterPostcodes(): ServiceCall[RequestTimeFilterPostcodes ,ResponseTimeFilterPostcodes]
  
  /**
    * 
    * 
    *  
    * @return ResponseTimeMap Body Parameter   
    */
  def timeMap(): ServiceCall[RequestTimeMap ,ResponseTimeMap]
  

  }

