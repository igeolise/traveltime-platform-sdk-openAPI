/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.1
 * Contact: support@igeolise.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"
)


// DefaultApiRouter defines the required methods for binding the api requests to a responses for the DefaultApi
// The DefaultApiRouter implementation should parse necessary information from the http request, 
// pass the data to a DefaultApiServicer to perform the required actions, then write the service results to the http response.
type DefaultApiRouter interface { 
	GeocodingReverseSearch(http.ResponseWriter, *http.Request)
	GeocodingSearch(http.ResponseWriter, *http.Request)
	MapInfo(http.ResponseWriter, *http.Request)
	Routes(http.ResponseWriter, *http.Request)
	SupportedLocations(http.ResponseWriter, *http.Request)
	TimeFilter(http.ResponseWriter, *http.Request)
	TimeFilterFast(http.ResponseWriter, *http.Request)
	TimeFilterPostcodeDistricts(http.ResponseWriter, *http.Request)
	TimeFilterPostcodeSectors(http.ResponseWriter, *http.Request)
	TimeFilterPostcodes(http.ResponseWriter, *http.Request)
	TimeMap(http.ResponseWriter, *http.Request)
}


// DefaultApiServicer defines the api actions for the DefaultApi service
// This interface intended to stay up to date with the openapi yaml used to generate it, 
// while the service implementation can ignored with the .openapi-generator-ignore file 
// and updated with the logic required for the API.
type DefaultApiServicer interface { 
	GeocodingReverseSearch(float64, float64, string) (interface{}, error)
	GeocodingSearch(string, float64, float64, string) (interface{}, error)
	MapInfo() (interface{}, error)
	Routes(RequestRoutes) (interface{}, error)
	SupportedLocations(RequestSupportedLocations) (interface{}, error)
	TimeFilter(RequestTimeFilter) (interface{}, error)
	TimeFilterFast(RequestTimeFilterFast) (interface{}, error)
	TimeFilterPostcodeDistricts(RequestTimeFilterPostcodeDistricts) (interface{}, error)
	TimeFilterPostcodeSectors(RequestTimeFilterPostcodeSectors) (interface{}, error)
	TimeFilterPostcodes(RequestTimeFilterPostcodes) (interface{}, error)
	TimeMap(RequestTimeMap) (interface{}, error)
}
