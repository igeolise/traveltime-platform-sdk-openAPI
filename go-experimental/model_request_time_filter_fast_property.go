/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.1
 * Contact: support@igeolise.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"encoding/json"
	"fmt"
)

// RequestTimeFilterFastProperty the model 'RequestTimeFilterFastProperty'
type RequestTimeFilterFastProperty string

// List of RequestTimeFilterFastProperty
const (
	TRAVEL_TIME RequestTimeFilterFastProperty = "travel_time"
	FARES RequestTimeFilterFastProperty = "fares"
)

func (v *RequestTimeFilterFastProperty) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RequestTimeFilterFastProperty(value)
	for _, existing := range []RequestTimeFilterFastProperty{ "travel_time", "fares",   } {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RequestTimeFilterFastProperty", value)
}

// Ptr returns reference to RequestTimeFilterFastProperty value
func (v RequestTimeFilterFastProperty) Ptr() *RequestTimeFilterFastProperty {
	return &v
}

type NullableRequestTimeFilterFastProperty struct {
	value *RequestTimeFilterFastProperty
	isSet bool
}

func (v NullableRequestTimeFilterFastProperty) Get() *RequestTimeFilterFastProperty {
	return v.value
}

func (v *NullableRequestTimeFilterFastProperty) Set(val *RequestTimeFilterFastProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestTimeFilterFastProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestTimeFilterFastProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestTimeFilterFastProperty(val *RequestTimeFilterFastProperty) *NullableRequestTimeFilterFastProperty {
	return &NullableRequestTimeFilterFastProperty{value: val, isSet: true}
}

func (v NullableRequestTimeFilterFastProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestTimeFilterFastProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

