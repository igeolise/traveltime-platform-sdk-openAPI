/**
* TravelTime API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.2.1
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "RequestTimeFilterFastArrivalOneToManySearch.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

RequestTimeFilterFastArrivalOneToManySearch::RequestTimeFilterFastArrivalOneToManySearch()
{
    m_Id = "";
    m_Departure_location_id = "";
    m_Travel_time = 0;
    
}

RequestTimeFilterFastArrivalOneToManySearch::~RequestTimeFilterFastArrivalOneToManySearch()
{
}

void RequestTimeFilterFastArrivalOneToManySearch::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const RequestTimeFilterFastArrivalOneToManySearch& o)
{
    j = nlohmann::json();
    j["id"] = o.m_Id;
    j["departure_location_id"] = o.m_Departure_location_id;
    j["arrival_location_ids"] = o.m_Arrival_location_ids;
    j["transportation"] = o.m_Transportation;
    j["travel_time"] = o.m_Travel_time;
    j["arrival_time_period"] = o.m_Arrival_time_period;
    j["properties"] = o.m_Properties;
}

void from_json(const nlohmann::json& j, RequestTimeFilterFastArrivalOneToManySearch& o)
{
    j.at("id").get_to(o.m_Id);
    j.at("departure_location_id").get_to(o.m_Departure_location_id);
    j.at("arrival_location_ids").get_to(o.m_Arrival_location_ids);
    j.at("transportation").get_to(o.m_Transportation);
    j.at("travel_time").get_to(o.m_Travel_time);
    j.at("arrival_time_period").get_to(o.m_Arrival_time_period);
    j.at("properties").get_to(o.m_Properties);
}

std::string RequestTimeFilterFastArrivalOneToManySearch::getId() const
{
    return m_Id;
}
void RequestTimeFilterFastArrivalOneToManySearch::setId(std::string const& value)
{
    m_Id = value;
}
std::string RequestTimeFilterFastArrivalOneToManySearch::getDepartureLocationId() const
{
    return m_Departure_location_id;
}
void RequestTimeFilterFastArrivalOneToManySearch::setDepartureLocationId(std::string const& value)
{
    m_Departure_location_id = value;
}
std::vector<std::string>& RequestTimeFilterFastArrivalOneToManySearch::getArrivalLocationIds()
{
    return m_Arrival_location_ids;
}
void RequestTimeFilterFastArrivalOneToManySearch::setArrivalLocationIds(std::vector<std::string> const& value)
{
    m_Arrival_location_ids = value;
}
RequestTransportationFast RequestTimeFilterFastArrivalOneToManySearch::getTransportation() const
{
    return m_Transportation;
}
void RequestTimeFilterFastArrivalOneToManySearch::setTransportation(RequestTransportationFast const& value)
{
    m_Transportation = value;
}
int32_t RequestTimeFilterFastArrivalOneToManySearch::getTravelTime() const
{
    return m_Travel_time;
}
void RequestTimeFilterFastArrivalOneToManySearch::setTravelTime(int32_t const value)
{
    m_Travel_time = value;
}
RequestArrivalTimePeriod RequestTimeFilterFastArrivalOneToManySearch::getArrivalTimePeriod() const
{
    return m_Arrival_time_period;
}
void RequestTimeFilterFastArrivalOneToManySearch::setArrivalTimePeriod(RequestArrivalTimePeriod const& value)
{
    m_Arrival_time_period = value;
}
std::vector<RequestTimeFilterFastProperty>& RequestTimeFilterFastArrivalOneToManySearch::getProperties()
{
    return m_Properties;
}
void RequestTimeFilterFastArrivalOneToManySearch::setProperties(std::vector<RequestTimeFilterFastProperty> const& value)
{
    m_Properties = value;
}

}
}
}
}

