/**
* TravelTime API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.2.1
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * RequestTimeFilterPostcodeDistrictsArrivalSearch.h
 *
 * 
 */

#ifndef RequestTimeFilterPostcodeDistrictsArrivalSearch_H_
#define RequestTimeFilterPostcodeDistrictsArrivalSearch_H_


#include "RequestRangeFull.h"
#include <string>
#include "RequestTimeFilterPostcodeDistrictsProperty.h"
#include "RequestTransportation.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  RequestTimeFilterPostcodeDistrictsArrivalSearch
{
public:
    RequestTimeFilterPostcodeDistrictsArrivalSearch();
    virtual ~RequestTimeFilterPostcodeDistrictsArrivalSearch();

    void validate();

    /////////////////////////////////////////////
    /// RequestTimeFilterPostcodeDistrictsArrivalSearch members

    /// <summary>
    /// 
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    RequestTransportation getTransportation() const;
    void setTransportation(RequestTransportation const& value);
    /// <summary>
    /// 
    /// </summary>
    int32_t getTravelTime() const;
    void setTravelTime(int32_t const value);
    /// <summary>
    /// 
    /// </summary>
    std::string getArrivalTime() const;
    void setArrivalTime(std::string const& value);
    /// <summary>
    /// 
    /// </summary>
    double getReachablePostcodesThreshold() const;
    void setReachablePostcodesThreshold(double const value);
    /// <summary>
    /// 
    /// </summary>
    std::vector<RequestTimeFilterPostcodeDistrictsProperty>& getProperties();
    void setProperties(std::vector<RequestTimeFilterPostcodeDistrictsProperty> const& value);
    /// <summary>
    /// 
    /// </summary>
    RequestRangeFull getRange() const;
    void setRange(RequestRangeFull const& value);
    bool rangeIsSet() const;
    void unsetRange();

    friend void to_json(nlohmann::json& j, const RequestTimeFilterPostcodeDistrictsArrivalSearch& o);
    friend void from_json(const nlohmann::json& j, RequestTimeFilterPostcodeDistrictsArrivalSearch& o);
protected:
    std::string m_Id;

    RequestTransportation m_Transportation;

    int32_t m_Travel_time;

    std::string m_Arrival_time;

    double m_Reachable_postcodes_threshold;

    std::vector<RequestTimeFilterPostcodeDistrictsProperty> m_Properties;

    RequestRangeFull m_Range;
    bool m_RangeIsSet;
};

}
}
}
}

#endif /* RequestTimeFilterPostcodeDistrictsArrivalSearch_H_ */
