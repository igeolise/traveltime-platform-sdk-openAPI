/**
* TravelTime API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.2.1
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * ResponseTimeFilterProperties.h
 *
 * 
 */

#ifndef ResponseTimeFilterProperties_H_
#define ResponseTimeFilterProperties_H_


#include "ResponseRoute.h"
#include "ResponseDistanceBreakdownItem.h"
#include "ResponseFares.h"
#include <vector>
#include <nlohmann/json.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  ResponseTimeFilterProperties
{
public:
    ResponseTimeFilterProperties();
    virtual ~ResponseTimeFilterProperties();

    void validate();

    /////////////////////////////////////////////
    /// ResponseTimeFilterProperties members

    /// <summary>
    /// 
    /// </summary>
    int32_t getTravelTime() const;
    void setTravelTime(int32_t const value);
    bool travelTimeIsSet() const;
    void unsetTravel_time();
    /// <summary>
    /// 
    /// </summary>
    int32_t getDistance() const;
    void setDistance(int32_t const value);
    bool distanceIsSet() const;
    void unsetDistance();
    /// <summary>
    /// 
    /// </summary>
    std::vector<ResponseDistanceBreakdownItem>& getDistanceBreakdown();
    void setDistanceBreakdown(std::vector<ResponseDistanceBreakdownItem> const& value);
    bool distanceBreakdownIsSet() const;
    void unsetDistance_breakdown();
    /// <summary>
    /// 
    /// </summary>
    ResponseFares getFares() const;
    void setFares(ResponseFares const& value);
    bool faresIsSet() const;
    void unsetFares();
    /// <summary>
    /// 
    /// </summary>
    ResponseRoute getRoute() const;
    void setRoute(ResponseRoute const& value);
    bool routeIsSet() const;
    void unsetRoute();

    friend void to_json(nlohmann::json& j, const ResponseTimeFilterProperties& o);
    friend void from_json(const nlohmann::json& j, ResponseTimeFilterProperties& o);
protected:
    int32_t m_Travel_time;
    bool m_Travel_timeIsSet;
    int32_t m_Distance;
    bool m_DistanceIsSet;
    std::vector<ResponseDistanceBreakdownItem> m_Distance_breakdown;
    bool m_Distance_breakdownIsSet;
    ResponseFares m_Fares;
    bool m_FaresIsSet;
    ResponseRoute m_Route;
    bool m_RouteIsSet;
};

}
}
}
}

#endif /* ResponseTimeFilterProperties_H_ */
