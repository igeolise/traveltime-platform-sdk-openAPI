/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.RequestRoutes
import org.openapitools.client.model.RequestSupportedLocations
import org.openapitools.client.model.RequestTimeFilter
import org.openapitools.client.model.RequestTimeFilterFast
import org.openapitools.client.model.RequestTimeFilterPostcodeDistricts
import org.openapitools.client.model.RequestTimeFilterPostcodeSectors
import org.openapitools.client.model.RequestTimeFilterPostcodes
import org.openapitools.client.model.RequestTimeMap
import org.openapitools.client.model.ResponseError
import org.openapitools.client.model.ResponseGeocoding
import org.openapitools.client.model.ResponseMapInfo
import org.openapitools.client.model.ResponseRoutes
import org.openapitools.client.model.ResponseSupportedLocations
import org.openapitools.client.model.ResponseTimeFilter
import org.openapitools.client.model.ResponseTimeFilterFast
import org.openapitools.client.model.ResponseTimeFilterPostcodeDistricts
import org.openapitools.client.model.ResponseTimeFilterPostcodeSectors
import org.openapitools.client.model.ResponseTimeFilterPostcodes
import org.openapitools.client.model.ResponseTimeMap
import org.openapitools.client.core.JsonSupport._
import sttp.client._
import sttp.model.Method

object DefaultApi {

def apply(baseUrl: String = "https://api.traveltimeapp.com") = new DefaultApi(baseUrl)
}

class DefaultApi(baseUrl: String) {

  /**
   * Expected answers:
   *   code 200 : ResponseGeocoding (Match a query string to geographic coordinates. [Docs link](http://docs.traveltime.com/reference/geocoding-search/))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   * 
   * @param lat 
   * @param lng 
   * @param withinCountry 
   */
  def geocodingReverseSearch(apiKey: String, apiKey: String)(lat: Double, lng: Double, withinCountry: Option[String] = None
): Request[Either[ResponseError[Exception], ResponseGeocoding], Nothing] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/v4/geocoding/reverse?lat=$lat&lng=$lng&within.country=$withinCountry")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .response(asJson[ResponseGeocoding])

  /**
   * Expected answers:
   *   code 200 : ResponseGeocoding (Match a query string to geographic coordinates. [Docs link](http://docs.traveltime.com/reference/geocoding-search/))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   * 
   * @param query 
   * @param focusLat 
   * @param focusLng 
   * @param withinCountry 
   */
  def geocodingSearch(apiKey: String, apiKey: String)(query: String, focusLat: Option[Double] = None, focusLng: Option[Double] = None, withinCountry: Option[String] = None
): Request[Either[ResponseError[Exception], ResponseGeocoding], Nothing] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/v4/geocoding/search?query=$query&focus.lat=$focusLat&focus.lng=$focusLng&within.country=$withinCountry")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .response(asJson[ResponseGeocoding])

  /**
   * Expected answers:
   *   code 200 : ResponseMapInfo (Returns information about currently supported countries. [Docs link](http://docs.traveltime.com/reference/map-info/))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   */
  def mapInfo(apiKey: String, apiKey: String)(
): Request[Either[ResponseError[Exception], ResponseMapInfo], Nothing] =
    basicRequest
      .method(Method.GET, uri"$baseUrl/v4/map-info")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .response(asJson[ResponseMapInfo])

  /**
   * Expected answers:
   *   code 200 : ResponseRoutes (Returns routing information between source and destinations. [Docs link](http://docs.traveltime.com/reference/routes/))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   * 
   * @param requestRoutes 
   */
  def routes(apiKey: String, apiKey: String)(requestRoutes: RequestRoutes
): Request[Either[ResponseError[Exception], ResponseRoutes], Nothing] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/v4/routes")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .body(requestRoutes)
      .response(asJson[ResponseRoutes])

  /**
   * Expected answers:
   *   code 200 : ResponseSupportedLocations (Find out what points are supported by our api. [Docs link](http://docs.traveltime.com/reference/supported-locations/))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   * 
   * @param requestSupportedLocations 
   */
  def supportedLocations(apiKey: String, apiKey: String)(requestSupportedLocations: RequestSupportedLocations
): Request[Either[ResponseError[Exception], ResponseSupportedLocations], Nothing] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/v4/supported-locations")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .body(requestSupportedLocations)
      .response(asJson[ResponseSupportedLocations])

  /**
   * Expected answers:
   *   code 200 : ResponseTimeFilter (Given origin and destination points filter out points that cannot be reached within specified time limit. [Docs link](http://docs.traveltime.com/reference/time-filter))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   * 
   * @param requestTimeFilter 
   */
  def timeFilter(apiKey: String, apiKey: String)(requestTimeFilter: RequestTimeFilter
): Request[Either[ResponseError[Exception], ResponseTimeFilter], Nothing] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/v4/time-filter")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .body(requestTimeFilter)
      .response(asJson[ResponseTimeFilter])

  /**
   * Expected answers:
   *   code 200 : ResponseTimeFilterFast (A very fast version of Time Filter. [Docs link](http://docs.traveltime.com/reference/time-filter-fast/))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   * 
   * @param requestTimeFilterFast 
   */
  def timeFilterFast(apiKey: String, apiKey: String)(requestTimeFilterFast: RequestTimeFilterFast
): Request[Either[ResponseError[Exception], ResponseTimeFilterFast], Nothing] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/v4/time-filter/fast")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .body(requestTimeFilterFast)
      .response(asJson[ResponseTimeFilterFast])

  /**
   * Expected answers:
   *   code 200 : ResponseTimeFilterPostcodeDistricts (Find districts that have a certain coverage from origin and get statistics about postcodes within such districts. [Docs link](http://docs.traveltime.com/reference/postcode-district-filter/))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   * 
   * @param requestTimeFilterPostcodeDistricts 
   */
  def timeFilterPostcodeDistricts(apiKey: String, apiKey: String)(requestTimeFilterPostcodeDistricts: RequestTimeFilterPostcodeDistricts
): Request[Either[ResponseError[Exception], ResponseTimeFilterPostcodeDistricts], Nothing] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/v4/time-filter/postcode-districts")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .body(requestTimeFilterPostcodeDistricts)
      .response(asJson[ResponseTimeFilterPostcodeDistricts])

  /**
   * Expected answers:
   *   code 200 : ResponseTimeFilterPostcodeSectors (Find sectors that have a certain coverage from origin and get statistics about postcodes within such sectors. [Docs link](http://docs.traveltime.com/reference/postcode-sector-filter/))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   * 
   * @param requestTimeFilterPostcodeSectors 
   */
  def timeFilterPostcodeSectors(apiKey: String, apiKey: String)(requestTimeFilterPostcodeSectors: RequestTimeFilterPostcodeSectors
): Request[Either[ResponseError[Exception], ResponseTimeFilterPostcodeSectors], Nothing] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/v4/time-filter/postcode-sectors")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .body(requestTimeFilterPostcodeSectors)
      .response(asJson[ResponseTimeFilterPostcodeSectors])

  /**
   * Expected answers:
   *   code 200 : ResponseTimeFilterPostcodes (Find reachable postcodes from origin and get statistics about such postcodes. [Docs link](http://docs.traveltime.com/reference/postcode-search/))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   * 
   * @param requestTimeFilterPostcodes 
   */
  def timeFilterPostcodes(apiKey: String, apiKey: String)(requestTimeFilterPostcodes: RequestTimeFilterPostcodes
): Request[Either[ResponseError[Exception], ResponseTimeFilterPostcodes], Nothing] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/v4/time-filter/postcodes")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .body(requestTimeFilterPostcodes)
      .response(asJson[ResponseTimeFilterPostcodes])

  /**
   * Expected answers:
   *   code 200 : ResponseTimeMap (Given origin coordinates, find shapes of zones reachable within corresponding travel time. [Docs link](http://docs.traveltime.com/reference/time-map/))
   *   code 0 : ResponseError (The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response))
   * 
   * Available security schemes:
   *   ApiKey (apiKey)
   *   ApplicationId (apiKey)
   * 
   * @param requestTimeMap 
   */
  def timeMap(apiKey: String, apiKey: String)(requestTimeMap: RequestTimeMap
): Request[Either[ResponseError[Exception], ResponseTimeMap], Nothing] =
    basicRequest
      .method(Method.POST, uri"$baseUrl/v4/time-map")
      .contentType("application/json")
      .header("X-Api-Key", apiKey)
      .header("X-Application-Id", apiKey)
      .body(requestTimeMap)
      .response(asJson[ResponseTimeMap])

}
